fragment AuthorAndPublicationCount on Author {
  id
  authorId
  fullName
  publicationAuthorsByAuthorId {
        totalCount
      }
}

query GetAllAuthors {
  allAuthors {
    nodes {
      ...AuthorAndPublicationCount
    }
  }
}

mutation AddAuthorToPublication($authorId: String!, $publicationId: String!) {
  __typename
  createPublicationAuthor(input: {publicationAuthor: {authorId: $authorId, publicationId: $publicationId}}) {
    publicationByPublicationId {
      ...PublicationAuthorAnnotationCount
    }
    authorByAuthorId {
      ...AuthorAndPublicationCount
    }
  }
}

mutation CreateAuthorAndAddToPublication(
  $authorId: String!
  $fullName: String!
  $accountId: UUID!
  $publicationId: String!
) {
  __typename
  createAuthor(
    input: {
      author: {
        authorId: $authorId
        fullName: $fullName
        publicationAuthorsUsingAuthorId: { create: { publicationId: $publicationId } }
        accountId: $accountId
      }
    }
  ) {
    author {
      ...AuthorAndPublicationCount
    }
    query {
      publicationByPublicationId(publicationId: $publicationId) {
        ...PublicationAuthorAnnotationCount
      }
    }
  }
}

mutation DeletePublicationAuthor($publicationId: String!, $authorId: String!) {
  __typename
  deletePublicationAuthorByPublicationIdAndAuthorId(
    input: { publicationId: $publicationId, authorId: $authorId }
  ) {
    publicationByPublicationId {
      ...PublicationAuthorAnnotationCount
    }
    authorByAuthorId {
      ...AuthorAndPublicationCount
    }
  }
}

mutation DeleteAuthor($authorId: String!) {
  __typename
  deleteAuthorByAuthorId(input: {authorId: $authorId}) {
    author {
      accountId
      authorId
      fullName
    }
  }
}
